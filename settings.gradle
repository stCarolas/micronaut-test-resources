pluginManagement {
    repositories {
        gradlePluginPortal()
        mavenCentral()
//        maven {
//            url "https://s01.oss.sonatype.org/content/repositories/snapshots"
//        }
    }
}

plugins {
    id 'io.micronaut.build.shared.settings' version '7.0.1'
}
rootProject.name = 'testresources-parent'

enableFeaturePreview("TYPESAFE_PROJECT_ACCESSORS")

// Extensions as in "Micronaut Test extensions"
// This name was chosen to reduce the naming overhead
// e.g micronaut-test-resources-micronaut-test-extensions-core
// is just micronaut-test-resources-extensions-core
def extensionModules = [
        'core',
        'junit-platform'
]

def jdbcModules = [
        'core',
        'mysql',
        'mariadb',
        'oracle-xe',
        'oracle-free',
        'postgresql',
        'mssql'
]
def r2dbcModules = [
        'core',
        'mariadb',
        'mysql',
        'oracle-xe',
        'oracle-free',
        'postgresql',
        'mssql',
        'pool'
]
def hibernateReactiveModules = [
        'core',
        'mariadb',
        'mssql',
        'mysql',
        'postgresql',
        'oracle-xe',
        'oracle-free'
]

def localstackModules = [
        'core',
        's3',
        'dynamodb',
        'sqs'
]

include 'test-resources-bom'
include 'test-resources-build-tools'
include 'test-resources-core'
include 'test-resources-client'
include 'test-resources-control-panel'
include 'test-resources-elasticsearch'
include 'test-resources-embedded'
include 'test-resources-hivemq'
include 'test-resources-kafka'
include 'test-resources-mongodb'
include 'test-resources-neo4j'
include 'test-resources-opensearch'
include 'test-resources-redis'
include 'test-resources-rabbitmq'
include 'test-resources-server'
include 'test-resources-testcontainers'
include 'test-resources-hashicorp-vault'

extensionModules.each {
    String projectName = "test-resources-extensions-$it"
    include projectName
    project(":test-resources-extensions-$it").projectDir = file("test-resources-extensions/$projectName")
}
jdbcModules.each {
    String projectName = "test-resources-jdbc-$it"
    include projectName
    project(":test-resources-jdbc-$it").projectDir = file("test-resources-jdbc/$projectName")
}
r2dbcModules.each {
    String projectName = "test-resources-r2dbc-$it"
    include projectName
    project(":test-resources-r2dbc-$it").projectDir = file("test-resources-r2dbc/$projectName")
}
localstackModules.each {
    String projectName = "test-resources-localstack-$it"
    include projectName
    project(":test-resources-localstack-$it").projectDir = file("test-resources-localstack/$projectName")
}


hibernateReactiveModules.each {
    String projectName = "test-resources-hibernate-reactive-$it"
    include projectName
    project(":test-resources-hibernate-reactive-$it").projectDir = file("test-resources-hibernate-reactive/$projectName")
}

micronautBuild {
    useStandardizedProjectNames = true
    importMicronautCatalog()
    importMicronautCatalog("micronaut-aws")
    importMicronautCatalog("micronaut-control-panel")
    importMicronautCatalog("micronaut-data")
    importMicronautCatalog("micronaut-elasticsearch")
    importMicronautCatalog("micronaut-email")
    importMicronautCatalog("micronaut-kafka")
    importMicronautCatalog("micronaut-mongodb")
    importMicronautCatalog("micronaut-mqtt")
    importMicronautCatalog("micronaut-neo4j")
    importMicronautCatalog("micronaut-rabbitmq")
    importMicronautCatalog("micronaut-reactor")
    importMicronautCatalog("micronaut-redis")
    importMicronautCatalog("micronaut-r2dbc")
    importMicronautCatalog("micronaut-security")
    importMicronautCatalog("micronaut-serde")
    importMicronautCatalog("micronaut-sql")
}

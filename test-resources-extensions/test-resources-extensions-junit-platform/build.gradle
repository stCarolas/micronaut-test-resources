plugins {
    id 'io.micronaut.build.internal.test-resources-mntest-extension'
    id 'jvm-test-suite'
    id("org.jetbrains.kotlin.jvm") version "1.9.24"
    id("com.google.devtools.ksp") version "1.9.23-1.0.20"
}

description = """
Provides JUnit 5 extensions to extend the capabiities of tests when
test resources are present.
"""

testing {
    suites {
        spockTest(JvmTestSuite) {
            dependencies {
                implementation project(project.path)
                implementation(testFixtures(project(project.path)))
                implementation(mnTest.micronaut.test.spock)
                compileOnly(mn.micronaut.inject.groovy)
            }
            targets.all {
                tasks.named("check") {
                    dependsOn(testTask)
                }
            }
        }
        koTest(JvmTestSuite) {
            dependencies {
                implementation project(project.path)
                implementation testFixtures(project(project.path))
                implementation(mnTest.micronaut.test.kotest5)
            }
            targets.all {
                tasks.named("check") {
                    dependsOn(testTask)
                }
            }
        }
    }
}

dependencies {
    annotationProcessor(mn.micronaut.inject.java)
    api(projects.micronautTestResourcesExtensionsCore)
    api(projects.micronautTestResourcesClient)
    implementation(libs.junit.jupiter.api)
    implementation(libs.junit.platform.launcher)
    compileOnly(mnTest.micronaut.test.spock) {
        because("This project provides a Spock extension for @Shared fields")
    }
    testAnnotationProcessor(mn.micronaut.inject.java)
    testImplementation(mnTest.micronaut.test.junit5)
    testFixturesAnnotationProcessor(mn.micronaut.inject.java)
    testFixturesApi(libs.junit.platform.launcher)
    testFixturesApi(platform(mnTest.micronaut.test.bom))
    testFixturesImplementation(projects.micronautTestResourcesClient)
    testFixturesImplementation(projects.micronautTestResourcesExtensionsCore)
    testRuntimeOnly(libs.junit.jupiter.engine)
    testRuntimeOnly(mn.micronaut.context)
    testRuntimeOnly(mn.snakeyaml)
    kspKoTest(mn.micronaut.inject.kotlin)
}

tasks.named("spockTest", Test) {
    classpath = classpath.filter {
        println(it.name)
        if (it.name.endsWith(".jar") && it.name.startsWith("micronaut-test-resources-extensions-junit-platform-") && !it.name.contains("fixtures")) {
            return false
        }
        return true
    }
}
